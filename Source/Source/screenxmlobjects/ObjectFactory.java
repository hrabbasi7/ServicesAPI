////
//// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs
//// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
//// Any modifications to this file will be lost upon recompilation of the source schema.
//// Generated on: 2005.10.06 at 12:29:32 GMT+05:00
////
//
//
//package com.i2c.component.screenxmlobjects;
//
//
///**
// * This object contains factory methods for each
// * Java content interface and Java element interface
// * generated in the com.i2c.component.screenxmlobjects package.
// * <p>An ObjectFactory allows you to programatically
// * construct new instances of the Java representation
// * for XML content. The Java representation of XML
// * content can consist of schema derived interfaces
// * and classes representing the binding of schema
// * type definitions, element declarations and model
// * groups.  Factory methods for each of these are
// * provided in this class.
// *
// */
//public class ObjectFactory
//    extends com.i2c.component.screenxmlobjects.impl.runtime.DefaultJAXBContextImpl
//{
//
//    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
//    private static java.util.HashMap rootTagMap = new java.util.HashMap();
//    public final static com.i2c.component.screenxmlobjects.impl.runtime.GrammarInfo grammarInfo = new com.i2c.component.screenxmlobjects.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (com.i2c.component.screenxmlobjects.ObjectFactory.class));
//    public final static java.lang.Class version = (com.i2c.component.screenxmlobjects.impl.JAXBVersion.class);
//
//    static {
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.ControlQueryType.class), "com.i2c.component.screenxmlobjects.impl.ControlQueryTypeImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.DBQueriesType.class), "com.i2c.component.screenxmlobjects.impl.DBQueriesTypeImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.Screen.class), "com.i2c.component.screenxmlobjects.impl.ScreenImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.ControlMappingsType.class), "com.i2c.component.screenxmlobjects.impl.ControlMappingsTypeImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.ScreenType.class), "com.i2c.component.screenxmlobjects.impl.ScreenTypeImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.FindQueryType.class), "com.i2c.component.screenxmlobjects.impl.FindQueryTypeImpl");
//        defaultImplementations.put((com.i2c.component.screenxmlobjects.ControlType.class), "com.i2c.component.screenxmlobjects.impl.ControlTypeImpl");
//        rootTagMap.put(new javax.xml.namespace.QName("http://www.ibm.com", "Screen"), (com.i2c.component.screenxmlobjects.Screen.class));
//    }
//
//    /**
//     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.i2c.component.screenxmlobjects
//     *
//     */
//    public ObjectFactory() {
//        super(grammarInfo);
//    }
//
//    /**
//     * Create an instance of the specified Java content interface.
//     *
//     * @param javaContentInterface
//     *     the Class object of the javacontent interface to instantiate
//     * @return
//     *     a new instance
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
//        throws javax.xml.bind.JAXBException
//    {
//        return super.newInstance(javaContentInterface);
//    }
//
//    /**
//     * Get the specified property. This method can only be
//     * used to get provider specific properties.
//     * Attempting to get an undefined property will result
//     * in a PropertyException being thrown.
//     *
//     * @param name
//     *     the name of the property to retrieve
//     * @return
//     *     the value of the requested property
//     * @throws PropertyException
//     *     when there is an error retrieving the given property or value
//     */
//    public java.lang.Object getProperty(java.lang.String name)
//        throws javax.xml.bind.PropertyException
//    {
//        return super.getProperty(name);
//    }
//
//    /**
//     * Set the specified property. This method can only be
//     * used to set provider specific properties.
//     * Attempting to set an undefined property will result
//     * in a PropertyException being thrown.
//     *
//     * @param value
//     *     the value of the property to be set
//     * @param name
//     *     the name of the property to retrieve
//     * @throws PropertyException
//     *     when there is an error processing the given property or value
//     */
//    public void setProperty(java.lang.String name, java.lang.Object value)
//        throws javax.xml.bind.PropertyException
//    {
//        super.setProperty(name, value);
//    }
//
//    /**
//     * Create an instance of ControlQueryType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.ControlQueryType createControlQueryType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.ControlQueryTypeImpl();
//    }
//
//    /**
//     * Create an instance of DBQueriesType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.DBQueriesType createDBQueriesType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.DBQueriesTypeImpl();
//    }
//
//    /**
//     * Create an instance of Screen
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.Screen createScreen()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.ScreenImpl();
//    }
//
//    /**
//     * Create an instance of ControlMappingsType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.ControlMappingsType createControlMappingsType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.ControlMappingsTypeImpl();
//    }
//
//    /**
//     * Create an instance of ScreenType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.ScreenType createScreenType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.ScreenTypeImpl();
//    }
//
//    /**
//     * Create an instance of FindQueryType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.FindQueryType createFindQueryType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.FindQueryTypeImpl();
//    }
//
//    /**
//     * Create an instance of ControlType
//     *
//     * @throws JAXBException
//     *     if an error occurs
//     */
//    public com.i2c.component.screenxmlobjects.ControlType createControlType()
//        throws javax.xml.bind.JAXBException
//    {
//        return new com.i2c.component.screenxmlobjects.impl.ControlTypeImpl();
//    }
//
//}
